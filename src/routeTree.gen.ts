/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as IniAdminYhIndexRouteImport } from './routes/ini-admin-yh/index'
import { Route as GalleryIndexRouteImport } from './routes/gallery/index'
import { Route as BlogIndexRouteImport } from './routes/blog/index'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects/$projectId'
import { Route as BlogCatIdRouteImport } from './routes/blog/$catId'
import { Route as BlogPostSlugRouteImport } from './routes/blog/post.$slug'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const IniAdminYhIndexRoute = IniAdminYhIndexRouteImport.update({
  id: '/ini-admin-yh/',
  path: '/ini-admin-yh/',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryIndexRoute = GalleryIndexRouteImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogCatIdRoute = BlogCatIdRouteImport.update({
  id: '/blog/$catId',
  path: '/blog/$catId',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostSlugRoute = BlogPostSlugRouteImport.update({
  id: '/blog/post/$slug',
  path: '/blog/post/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog/$catId': typeof BlogCatIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/blog': typeof BlogIndexRoute
  '/gallery': typeof GalleryIndexRoute
  '/ini-admin-yh': typeof IniAdminYhIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/blog/post/$slug': typeof BlogPostSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog/$catId': typeof BlogCatIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/blog': typeof BlogIndexRoute
  '/gallery': typeof GalleryIndexRoute
  '/ini-admin-yh': typeof IniAdminYhIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/blog/post/$slug': typeof BlogPostSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog/$catId': typeof BlogCatIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/blog/': typeof BlogIndexRoute
  '/gallery/': typeof GalleryIndexRoute
  '/ini-admin-yh/': typeof IniAdminYhIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/blog/post/$slug': typeof BlogPostSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog/$catId'
    | '/projects/$projectId'
    | '/blog'
    | '/gallery'
    | '/ini-admin-yh'
    | '/projects'
    | '/blog/post/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog/$catId'
    | '/projects/$projectId'
    | '/blog'
    | '/gallery'
    | '/ini-admin-yh'
    | '/projects'
    | '/blog/post/$slug'
  id:
    | '__root__'
    | '/'
    | '/blog/$catId'
    | '/projects/$projectId'
    | '/blog/'
    | '/gallery/'
    | '/ini-admin-yh/'
    | '/projects/'
    | '/blog/post/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogCatIdRoute: typeof BlogCatIdRoute
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
  BlogIndexRoute: typeof BlogIndexRoute
  GalleryIndexRoute: typeof GalleryIndexRoute
  IniAdminYhIndexRoute: typeof IniAdminYhIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  BlogPostSlugRoute: typeof BlogPostSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ini-admin-yh/': {
      id: '/ini-admin-yh/'
      path: '/ini-admin-yh'
      fullPath: '/ini-admin-yh'
      preLoaderRoute: typeof IniAdminYhIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$catId': {
      id: '/blog/$catId'
      path: '/blog/$catId'
      fullPath: '/blog/$catId'
      preLoaderRoute: typeof BlogCatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/post/$slug': {
      id: '/blog/post/$slug'
      path: '/blog/post/$slug'
      fullPath: '/blog/post/$slug'
      preLoaderRoute: typeof BlogPostSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogCatIdRoute: BlogCatIdRoute,
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
  BlogIndexRoute: BlogIndexRoute,
  GalleryIndexRoute: GalleryIndexRoute,
  IniAdminYhIndexRoute: IniAdminYhIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  BlogPostSlugRoute: BlogPostSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
